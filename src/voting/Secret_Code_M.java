/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package voting;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.File;
import static java.lang.Thread.sleep;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;

/**
 *
 * @author Luqmaan
 */
public class Secret_Code_M extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public Secret_Code_M() {
        initComponents();
        jLabel1.setIcon(Voting.med);

        jLabel1.setIcon(Voting.med);
        jPasswordField1.setBorder(def);
        jPasswordField2.setBorder(def);

        errorP.setText("");

        errorP1.setText("");

        jPasswordField1.requestFocus();

        jPasswordField1.setEchoChar((char) '•');

        jPasswordField2.setEchoChar((char) '•');
    }

    public Secret_Code_M(String a) {
        initComponents();

        jLabel1.setIcon(Voting.med);

        jLabel1.setIcon(Voting.med);
        jPasswordField1.setBorder(def);
        jPasswordField2.setBorder(def);

        errorP.setText("");

        errorP1.setText("");

        jPasswordField1.requestFocus();

        jPasswordField1.setEchoChar((char) '•');

        jPasswordField2.setEchoChar((char) '•');

        base = a;

    }

    Color defC = new Color(0, 153, 153);
    Color errorC = new Color(153, 0, 0);
    Color grantC = new Color(51, 204, 0);

    Border def = new LineBorder(defC, 2);
    Border error = new LineBorder(errorC, 2);
    Border grant = new LineBorder(grantC, 2);

    String base = "";

    String sec1 = "";

    String sec2 = "";

    boolean flag;

    File file = new File("").getAbsoluteFile();
    File database = new File(file + "\\Database");
    File databaseFile = new File(database + "\\furqaan.db");

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        errorP = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jPasswordField2 = new javax.swing.JPasswordField();
        errorP1 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        errorP.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        errorP.setForeground(new java.awt.Color(153, 0, 0));
        jPanel1.add(errorP);
        errorP.setBounds(830, 420, 310, 20);

        jPasswordField1.setFont(new java.awt.Font("Berlin Sans FB", 0, 19)); // NOI18N
        jPasswordField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        jPasswordField1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordField1FocusGained(evt);
            }
        });
        jPasswordField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPasswordField1MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPasswordField1MouseReleased(evt);
            }
        });
        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyReleased(evt);
            }
        });
        jPanel1.add(jPasswordField1);
        jPasswordField1.setBounds(620, 410, 190, 38);

        jLabel4.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Secret Code      :");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(360, 420, 228, 30);

        jLabel5.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("Re-enter Secret Code      :");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(260, 470, 330, 30);

        jPasswordField2.setFont(new java.awt.Font("Berlin Sans FB", 0, 19)); // NOI18N
        jPasswordField2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        jPasswordField2.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jPasswordField2FocusGained(evt);
            }
        });
        jPasswordField2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPasswordField2MouseClicked(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPasswordField2MouseReleased(evt);
            }
        });
        jPasswordField2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField2KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPasswordField2KeyReleased(evt);
            }
        });
        jPanel1.add(jPasswordField2);
        jPasswordField2.setBounds(620, 460, 190, 38);

        errorP1.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        errorP1.setForeground(new java.awt.Color(153, 0, 0));
        jPanel1.add(errorP1);
        errorP1.setBounds(830, 470, 310, 20);

        jButton4.setBackground(new java.awt.Color(25, 25, 25));
        jButton4.setFont(new java.awt.Font("Berlin Sans FB", 1, 24)); // NOI18N
        jButton4.setForeground(new java.awt.Color(255, 255, 255));
        jButton4.setText("Proceed");
        jButton4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jButton4.setBorderPainted(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4);
        jButton4.setBounds(520, 550, 170, 40);

        jCheckBox1.setBackground(new java.awt.Color(255, 255, 255));
        jCheckBox1.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 14)); // NOI18N
        jCheckBox1.setText("Show Secret Code");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });
        jCheckBox1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jCheckBox1KeyReleased(evt);
            }
        });
        jPanel1.add(jCheckBox1);
        jCheckBox1.setBounds(670, 510, 140, 25);

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/voting/res/back.png"))); // NOI18N
        jLabel10.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel10MouseClicked(evt);
            }
        });
        jPanel1.add(jLabel10);
        jLabel10.setBounds(10, 10, 60, 60);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(jLabel1);
        jLabel1.setBounds(370, 0, 460, 320);

        jLabel9.setFont(new java.awt.Font("Berlin Sans FB", 1, 48)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("SECRET CODE...");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(370, 320, 460, 50);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1216, 714));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jPasswordField1FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField1FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField1FocusGained

    private void jPasswordField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPasswordField1MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jPasswordField1MouseClicked

    private void jPasswordField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_jPasswordField1KeyPressed

    private void jPasswordField2FocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jPasswordField2FocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField2FocusGained

    private void jPasswordField2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPasswordField2MouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_jPasswordField2MouseClicked

    private void jPasswordField2KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField2KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField2KeyPressed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        if (jPasswordField1.getBorder() == grant && jPasswordField2.getBorder() == grant) {

            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                Statement stmt = con.createStatement();

                String query = "select *from secretCode";

                ResultSet rs = stmt.executeQuery(query);

                flag = rs.next();

                rs.close();
                stmt.close();
                con.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, e.getMessage());
            }

            if (flag == false) {
                try {
                    Class.forName("java.sql.Driver");
                    Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                    Statement stmt = con.createStatement();

                    String query = "insert into SecretCode values('" + sec2 + "');";

                    stmt.executeUpdate(query);
                    JOptionPane.showMessageDialog(null, "Added new Secret Code");

                    flag = true;

                    if (base.equals("Splash1")) {
                        String a = "Secret_Code_M";

                        new Instructions1(a).setVisible(true);
                        this.dispose();

                    } else {
                        new Tools().setVisible(true);
                        this.dispose();
                    }

                    stmt.close();
                    con.close();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            } else {
                try {
                    Class.forName("java.sql.Driver");
                    Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                    Statement stmt = con.createStatement();

                    String query = "update SecretCode set code = '" + sec2 + " ';";

                    stmt.executeUpdate(query);

                    JOptionPane.showMessageDialog(null, "Secret Code Changed");

                    if (base.equals("Splash1")) {
                        String a = "Secret_Code_M";

                        new Instructions1(a).setVisible(true);
                        this.dispose();

                    } else {
                        new Tools().setVisible(true);
                        this.dispose();
                    }

                    stmt.close();
                    con.close();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }
        } else {

            errorP.setText("");
            jPasswordField1.setBorder(def);

            errorP1.setText("");
            jPasswordField2.setBorder(def);

            Thread t = new Thread() {

                @Override
                public void run() {

                    try {
                        sleep(100);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Secret_Code_M.class.getName()).log(Level.SEVERE, null, ex);
                    }

                    if (sec1.length() >= 4 && sec1.length() <= 16) {
                        errorP.setText("");
                        jPasswordField1.setBorder(grant);

                    } else if (sec1.equals("")) {
                        try {
                            sleep(100);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Secret_Code_M.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        errorP.setText("! Enter a Secret Code");
                        jPasswordField1.setBorder(error);
                    } else if (sec1.length() < 4) {
                        try {
                            sleep(100);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Secret_Code_M.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        errorP.setText("! Secret Code too short");
                        jPasswordField1.setBorder(error);
                    } else if (sec1.length() > 16) {
                        try {
                            sleep(100);
                        } catch (InterruptedException ex) {
                            Logger.getLogger(Secret_Code_M.class.getName()).log(Level.SEVERE, null, ex);
                        }
                        errorP.setText("! Secret Code too Long");
                        jPasswordField1.setBorder(error);
                    }

                    if (sec2.equals(sec1) && jPasswordField1.getBorder() == grant) {
                        errorP1.setText("");
                        jPasswordField2.setBorder(grant);
                    } else {
                        errorP1.setText("! Secret Codes do not Match");
                        jPasswordField2.setBorder(error);
                    }
                }
            };
            t.start();
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jPasswordField1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPasswordField1MouseReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jPasswordField1MouseReleased

    private void jPasswordField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyReleased
        // TODO add your handling code here:
        errorP.setText("");
        jPasswordField1.setBorder(def);

        sec1 = new String(jPasswordField1.getPassword());

        Thread t = new Thread() {

            @Override
            public void run() {

                if (sec1.length() >= 4 && sec1.length() <= 16) {
                    errorP.setText("");
                    jPasswordField1.setBorder(grant);

                } else if (sec1.equals("")) {
                    try {
                        sleep(100);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Secret_Code_M.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    errorP.setText("! Enter a Secret Code");
                    jPasswordField1.setBorder(error);
                } else if (sec1.length() < 4) {
                    try {
                        sleep(100);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Secret_Code_M.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    errorP.setText("! Secret Code too short");
                    jPasswordField1.setBorder(error);
                } else if (sec1.length() > 16) {
                    try {
                        sleep(100);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Secret_Code_M.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    errorP.setText("! Secret Code too Long");
                    jPasswordField1.setBorder(error);
                }

            }

        };
        t.start();

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (sec1.length() >= 4 && sec1.length() <= 16) {
                errorP.setText("");
                jPasswordField1.setBorder(grant);

                jPasswordField2.requestFocus();
            }
        }
    }//GEN-LAST:event_jPasswordField1KeyReleased

    private void jPasswordField2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField2KeyReleased
        // TODO add your handling code here:
        sec2 = new String(jPasswordField2.getPassword());

        errorP1.setText("");
        jPasswordField2.setBorder(def);

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            if (sec2.equals(sec1) && jPasswordField1.getBorder() == grant) {

                try {
                    Class.forName("java.sql.Driver");
                    Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                    Statement stmt = con.createStatement();

                    String query = "select *from secretCode";

                    ResultSet rs = stmt.executeQuery(query);

                    flag = rs.next();

                    rs.close();
                    stmt.close();
                    con.close();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }

                if (flag == false) {

                    try {

                        Class.forName("java.sql.Driver");
                        Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                        Statement stmt = con.createStatement();

                        String query = "insert into SecretCode values('" + sec2 + "');";

                        stmt.executeUpdate(query);

                        JOptionPane.showMessageDialog(null, "Added new Secret Code");

                        flag = true;

                        if (base.equals("Splash1")) {
                            String a = "Secret_Code_M";

                            new Instructions1(a).setVisible(true);
                            this.dispose();

                        } else {
                            new Tools().setVisible(true);
                            this.dispose();
                        }

                        stmt.close();
                        con.close();

                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e.getMessage());
                    }
                } else {
                    try {

                        Class.forName("java.sql.Driver");
                        Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                        Statement stmt = con.createStatement();

                        String query = "update SecretCode set code = '" + sec2 + " ';";

                        stmt.executeUpdate(query);

                        JOptionPane.showMessageDialog(null, "Secret Code Changed");

                        if (base.equals("Splash1")) {
                            String a = "Secret_Code_M";

                            new Instructions1(a).setVisible(true);
                            this.dispose();

                        } else {
                            new Tools().setVisible(true);
                            this.dispose();
                        }

                        stmt.close();
                        con.close();

                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e.getMessage());
                    }
                }
            }
        }

        Thread t = new Thread() {

            @Override
            public void run() {

                if (sec1.length() >= 4 && sec1.length() <= 16) {
                    errorP.setText("");
                    jPasswordField1.setBorder(grant);

                } else if (sec1.equals("")) {
                    try {
                        sleep(100);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Secret_Code_M.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    errorP.setText("! Enter a Secret Code");
                    jPasswordField1.setBorder(error);
                } else if (sec1.length() < 4) {
                    try {
                        sleep(100);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Secret_Code_M.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    errorP.setText("! Secret Code too short");
                    jPasswordField1.setBorder(error);
                } else if (sec1.length() > 16) {
                    try {
                        sleep(100);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Secret_Code_M.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    errorP.setText("! Secret Code too Long");
                    jPasswordField1.setBorder(error);
                }

                if (sec2.equals(sec1) && jPasswordField1.getBorder() == grant) {
                    errorP1.setText("");
                    jPasswordField2.setBorder(grant);
                } else {
                    errorP1.setText("! Secret Codes do not Match");
                    jPasswordField2.setBorder(error);
                }
            }
        };
        t.start();
    }//GEN-LAST:event_jPasswordField2KeyReleased

    private void jCheckBox1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jCheckBox1KeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_jCheckBox1KeyReleased

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        // TODO add your handling code here:
        if (jCheckBox1.isSelected()) {
            jPasswordField1.setEchoChar((char) 0);
            jPasswordField2.setEchoChar((char) 0);
        } else {
            jPasswordField1.setEchoChar((char) '•');
            jPasswordField2.setEchoChar((char) '•');
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jPasswordField2MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPasswordField2MouseReleased
        // TODO add your handling code here:
        sec1 = new String(jPasswordField1.getPassword());

        errorP.setText("");
        jPasswordField1.setBorder(def);

        errorP1.setText("");
        jPasswordField1.setBorder(def);

        Thread t = new Thread() {

            @Override
            public void run() {

                try {
                    sleep(100);

                    if (sec1.length() >= 4 && sec1.length() <= 16) {
                        errorP.setText("");
                        jPasswordField1.setBorder(grant);
                    } else if (sec1.equals("")) {
                        errorP.setText("! Enter a Secret Code");
                        jPasswordField1.setBorder(error);
                    } else if (sec1.length() < 4) {
                        errorP.setText("! Secret Code too short");
                        jPasswordField1.setBorder(error);
                    } else if (sec1.length() > 16) {
                        errorP.setText("! Secret Code too Long");
                        jPasswordField1.setBorder(error);
                    }
                } catch (InterruptedException ex) {
                    Logger.getLogger(Login.class
                            .getName()).log(Level.SEVERE, null, ex);
                }
            }

        };
        t.start();
    }//GEN-LAST:event_jPasswordField2MouseReleased

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        if (base.equals("Splash1")) {
            jLabel10.setVisible(false);
            jLabel1.setIcon(Voting.med);
        }
        if (base.equals("Tools")) {
            jLabel10.setVisible(true);
            jLabel1.setIcon(Voting.med);
        }

    }//GEN-LAST:event_formWindowGainedFocus

    private void jLabel10MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel10MouseClicked
        // TODO add your handling code here:
        Tools tool = new Tools();
        tool.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jLabel10MouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Secret_Code_M.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Secret_Code_M.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Secret_Code_M.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Secret_Code_M.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Secret_Code_M().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel errorP;
    private javax.swing.JLabel errorP1;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JPasswordField jPasswordField2;
    // End of variables declaration//GEN-END:variables
}
