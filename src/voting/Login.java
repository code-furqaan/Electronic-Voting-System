/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package voting;

import java.awt.Color;
import java.awt.event.KeyEvent;
import java.io.File;
import static java.lang.Thread.sleep;
import javax.swing.JOptionPane;
import java.sql.DriverManager;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;

/**
 *
 * @author Luqmaan
 */
public class Login extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public Login() {
        initComponents();
        jLabel1.setIcon(Voting.med);

        jTextField1.setBorder(def);
        jPasswordField1.setBorder(def);

        jTextField1.requestFocus();

        jPasswordField1.setEchoChar((char) 'â€¢');

    }

    int fails = 0;

    Color defC = new Color(0, 153, 153);
    Color errorC = new Color(153, 0, 0);
    Color grantC = new Color(51, 204, 0);

    Border def = new LineBorder(defC, 2);
    Border error = new LineBorder(errorC, 2);
    Border grant = new LineBorder(grantC, 2);

    String name = "";
    String status = "login";
    String access = "";
    String code = "";

    File file = new File("").getAbsoluteFile();
    File database = new File(file + "\\Database");
    File databaseFile = new File(database + "\\furqaan.db");

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        errorP = new javax.swing.JLabel();
        errorU = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPanel1KeyPressed(evt);
            }
        });
        jPanel1.setLayout(null);

        jLabel3.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("Enter Name   :");
        jPanel1.add(jLabel3);
        jLabel3.setBounds(380, 390, 180, 38);

        jPasswordField1.setFont(new java.awt.Font("Berlin Sans FB", 0, 19)); // NOI18N
        jPasswordField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        jPasswordField1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPasswordField1MouseClicked(evt);
            }
        });
        jPasswordField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jPasswordField1KeyTyped(evt);
            }
        });
        jPanel1.add(jPasswordField1);
        jPasswordField1.setBounds(620, 440, 210, 38);

        jLabel4.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Password      :");
        jPanel1.add(jLabel4);
        jLabel4.setBounds(380, 450, 180, 30);

        jLabel5.setFont(new java.awt.Font("Berlin Sans FB", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 51, 51));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("E-voting");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(10, 0, 80, 40);

        jTextField1.setFont(new java.awt.Font("Berlin Sans FB", 0, 19)); // NOI18N
        jTextField1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 153, 153), 2));
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextField1KeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextField1KeyTyped(evt);
            }
        });
        jPanel1.add(jTextField1);
        jTextField1.setBounds(620, 390, 210, 40);

        jButton2.setBackground(new java.awt.Color(51, 51, 51));
        jButton2.setFont(new java.awt.Font("Berlin Sans FB", 1, 24)); // NOI18N
        jButton2.setForeground(new java.awt.Color(255, 255, 255));
        jButton2.setText("LOGIN");
        jButton2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2);
        jButton2.setBounds(540, 520, 140, 40);

        errorP.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        errorP.setForeground(new java.awt.Color(153, 0, 0));
        jPanel1.add(errorP);
        errorP.setBounds(840, 450, 310, 20);

        errorU.setFont(new java.awt.Font("MS Reference Sans Serif", 1, 14)); // NOI18N
        errorU.setForeground(new java.awt.Color(153, 0, 0));
        jPanel1.add(errorU);
        errorU.setBounds(840, 400, 310, 20);

        jButton3.setBackground(new java.awt.Color(51, 51, 51));
        jButton3.setFont(new java.awt.Font("Berlin Sans FB", 1, 24)); // NOI18N
        jButton3.setForeground(new java.awt.Color(255, 255, 255));
        jButton3.setText("REGISTER");
        jButton3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3);
        jButton3.setBounds(540, 570, 140, 40);

        jLabel9.setFont(new java.awt.Font("Berlin Sans FB", 1, 48)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(51, 51, 51));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("LOGIN");
        jPanel1.add(jLabel9);
        jLabel9.setBounds(370, 320, 460, 50);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(jLabel1);
        jLabel1.setBounds(370, 0, 460, 320);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1216, 714));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_formKeyPressed

    private void jPanel1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPanel1KeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1KeyPressed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        name = jTextField1.getText().trim();
        String pass = new String(jPasswordField1.getPassword());

        errorU.setText("");
        jTextField1.setBorder(def);
        jPasswordField1.setBorder(def);
        errorP.setText("");

        try {
            sleep(100);

            if (name.equals("")) {
                errorU.setText("! Enter your User Name");
                jTextField1.setBorder(error);
            } else if (name.length() < 5) {
                errorU.setText("! User Name too short");
                jTextField1.setBorder(error);
            } else {

                try {
                    Class.forName("java.sql.Driver");
                    Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                    Statement stmt = con.createStatement();

                    String query = "select *from admins where name = '" + name + "';";

                    ResultSet rs = stmt.executeQuery(query);

                    if (rs.next() == true) {

                        errorU.setText("");
                        jTextField1.setBorder(grant);
                        JOptionPane.showMessageDialog(null, "User Name already exists \nPlease Click on Login", "Info", WIDTH);
                        status = "login";

                    } else {
                        errorU.setText("");
                        jTextField1.setBorder(grant);
                        status = "register";

                    }

                    rs.close();
                    stmt.close();
                    con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }
            }

        } catch (InterruptedException ex) {
            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
        }

        if (status.equals("register")) {
            if (pass.length() < 8) {
                errorP.setText("");
                jPasswordField1.setBorder(def);
                jPasswordField1.requestFocus();

                Thread t1 = new Thread() {
                    @Override
                    public void run() {
                        try {
                            sleep(100);

                            errorP.setText("! Password less than 8 characters");
                            jPasswordField1.setBorder(error);

                        } catch (InterruptedException ex) {
                            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                };
                t1.start();
            } else {

                errorP.setText("");
                jPasswordField1.setBorder(grant);

                String Reg = JOptionPane.showInputDialog(this, "Please Enter the Secret Code to Register", "Secret Code", WIDTH);

                if (Reg.equals(code)) {

                    errorP.setText("");
                    jPasswordField1.setBorder(grant);
                    access = "Registered";

                    try {
                        Class.forName("java.sql.Driver");
                        Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                        Statement stmt = con.createStatement();

                        String query = "insert into admins values ('" + name + "', '" + pass + "');";

                        stmt.executeUpdate(query);

                        stmt.close();
                        con.close();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(this, e.getMessage());
                    }
                    JOptionPane.showMessageDialog(null, "Welcome " + name.toUpperCase(), "Welcome", JOptionPane.WIDTH);
                    new Main().setVisible(true);
                    this.dispose();

                } else if (Reg == null) {
                    JOptionPane.showMessageDialog(this, "Please Enter Secret Code to Register");
                } else {
                    JOptionPane.showMessageDialog(this, "Wrong Secret Code");
                }
            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:

        name = jTextField1.getText().trim();
        String pass = new String(jPasswordField1.getPassword());
        String password = null;

        errorU.setText("");
        jTextField1.setBorder(def);
        jPasswordField1.setBorder(def);
        errorP.setText("");

        switch (status) {
            case "login":

                Thread t = new Thread() {

                    @Override
                    public void run() {

                        try {
                            sleep(100);

                            if (name.equals("")) {
                                errorU.setText("! Enter your User Name");
                                jTextField1.setBorder(error);
                            } else if (name.length() < 5) {
                                errorU.setText("! User Name too short");
                                jTextField1.setBorder(error);
                            } else {

                                try {
                                    Class.forName("java.sql.Driver");
                                    Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                                    Statement stmt = con.createStatement();

                                    String query = "select *from admins where name = '" + name + "';";

                                    ResultSet rs = stmt.executeQuery(query);

                                    if (rs.next() == true) {
                                        jPasswordField1.requestFocus();
                                        errorU.setText("");
                                        jTextField1.setBorder(grant);
                                        status = "login";
                                    } else {
                                        int confirm = JOptionPane.showConfirmDialog(null, "User Name does not Exist \nDo you want to Register as "
                                                + name + "?", "Login Info", JOptionPane.YES_OPTION, WIDTH);

                                        switch (confirm) {
                                            case 0:
                                                status = "register";
                                                jPasswordField1.requestFocus();
                                                errorU.setText("");
                                                jTextField1.setBorder(grant);
                                                errorP.setText("");
                                                jPasswordField1.setBorder(def);
                                                break;

                                            case 1:
                                                status = "login";
                                                errorU.setText("! Wrong User Name");
                                                jTextField1.setBorder(error);

                                        }
                                    }
                                    rs.close();
                                    stmt.close();
                                    con.close();
                                } catch (Exception e) {
                                    JOptionPane.showMessageDialog(null, e.getMessage());
                                }
                            }

                        } catch (InterruptedException ex) {
                            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                };
                t.start();

                if (jTextField1.getBorder() == error) {

                    errorP.setText("");
                    jPasswordField1.setBorder(def);

                    Thread t1 = new Thread() {
                        @Override
                        public void run() {
                            try {
                                sleep(100);

                                jPasswordField1.setBorder(error);
                                errorP.setText("! Check the User Name");

                            } catch (InterruptedException ex) {
                                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                            }
                        }
                    };
                    t1.start();
                } else if (pass.equals("")) {

                    errorP.setText("");
                    jPasswordField1.setBorder(def);

                    Thread t1 = new Thread() {
                        @Override
                        public void run() {

                            try {
                                sleep(100);
                                jPasswordField1.setBorder(error);
                                errorP.setText("! Enter your Password");

                            } catch (InterruptedException ex) {
                                Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                            }

                        }
                    };
                    t1.start();

                } else {

                    try {
                        Class.forName("java.sql.Driver");
                        Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                        Statement stmt = con.createStatement();

                        String query = "Select password from admins where name = '" + name + "';";

                        ResultSet rs = stmt.executeQuery(query);

                        while (rs.next()) {
                            String a = rs.getString("password");
                            password = a;
                        }

                        rs.close();
                        stmt.close();
                        con.close();
                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e.getMessage());
                    }

                    if (pass.equals(password)) {

                        errorP.setText("");
                        jPasswordField1.setBorder(def);

                        Thread t1 = new Thread() {
                            @Override
                            public void run() {
                                try {
                                    sleep(100);
                                    errorP.setText("");
                                    jPasswordField1.setBorder(grant);

                                } catch (InterruptedException ex) {
                                    Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                                }

                            }
                        };
                        t1.start();

                        access = "Granted";
                        JOptionPane.showMessageDialog(null, "Access Granted", "ACCESS INFO", JOptionPane.WIDTH);
                        Main main = new Main();
                        main.setVisible(true);
                        this.dispose();
                        JOptionPane.showMessageDialog(null, "Welcome " + name.toUpperCase(), "Welcome", JOptionPane.WIDTH);
                    } else {
                        errorP.setText("");
                        jPasswordField1.setBorder(def);

                        Thread t1 = new Thread() {
                            @Override
                            public void run() {
                                try {
                                    sleep(100);
                                    errorP.setText("! Wrong Password");
                                    jPasswordField1.setBorder(error);

                                } catch (InterruptedException ex) {
                                    Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                                }

                            }
                        };
                        t1.start();

                        fails += 1;
                        access = "Denied";

                        switch (fails) {
                            case 3:
                                JOptionPane.showMessageDialog(null, "FINAL ATTEMPT! \nPlease Check your Info and try again", "ALERT", JOptionPane.WIDTH);
                                break;

                            case 4:
                                JOptionPane.showMessageDialog(null, "YOU HAVE BEEN CAUGHT", "ACCESS DENIED", JOptionPane.WIDTH);
                                System.exit(0);
                                break;
                        }
                    }

                    try {
                        Class.forName("java.sql.Driver");
                        Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                        Statement stmt = con.createStatement();

                        String query = "insert into login_info values('" + name + "', datetime(), '" + access + "');";

                        stmt.executeUpdate(query);

                        stmt.close();
                        con.close();

                    } catch (Exception e) {
                        JOptionPane.showMessageDialog(null, e.getMessage());
                    }
                }
                break;

            case "register":
                JOptionPane.showMessageDialog(this, "The User Name does not exist \nPlease Click on Register", "Info", WIDTH);
                break;

        }

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyPressed
        // TODO add your handling code here:

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            name = jTextField1.getText().trim();

            errorU.setText("");
            jTextField1.setBorder(def);
            jPasswordField1.setBorder(def);
            errorP.setText("");
            jPasswordField1.setText("");

            Thread t = new Thread() {

                @Override
                public void run() {

                    try {
                        sleep(100);

                        if (name.equals("")) {
                            errorU.setText("! Enter your User Name");
                            jTextField1.setBorder(error);
                        }
                        if (name.length() < 5) {
                            errorU.setText("! User Name too short");
                            jTextField1.setBorder(error);
                        } else {

                            try {
                                Class.forName("java.sql.Driver");
                                Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                                Statement stmt = con.createStatement();

                                String query = "select *from admins where name = '" + name + "';";

                                ResultSet rs = stmt.executeQuery(query);

                                if (rs.next() == true) {
                                    jPasswordField1.requestFocus();
                                    errorU.setText("");
                                    jTextField1.setBorder(grant);
                                    status = "login";
                                    jButton3.setToolTipText("Click on Register");
                                } else {
                                    int confirm = JOptionPane.showConfirmDialog(null, "User Name does not Exist \nDo you want to Register as "
                                            + name + "?", "Login Info", JOptionPane.YES_OPTION, WIDTH);

                                    switch (confirm) {
                                        case 0:
                                            status = "register";
                                            jPasswordField1.requestFocus();
                                            errorU.setText("");
                                            jTextField1.setBorder(grant);
                                            jButton2.setToolTipText("Click on Register");
                                            break;

                                        case 1:
                                            status = "login";
                                            errorU.setText("! Wrong User Name");
                                            jTextField1.setBorder(error);
                                    }
                                }

                                rs.close();
                                stmt.close();
                                con.close();
                            } catch (Exception e) {
                                JOptionPane.showMessageDialog(null, e.getMessage());
                            }
                        }
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            };
            t.start();

        }
    }//GEN-LAST:event_jTextField1KeyPressed

    private void jPasswordField1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

            name = jTextField1.getText().trim();
            String pass = new String(jPasswordField1.getPassword());
            String password = null;

            if (jTextField1.getBorder() == error) {

                errorP.setText("");
                jPasswordField1.setBorder(def);

                Thread t1 = new Thread() {
                    @Override
                    public void run() {
                        try {
                            sleep(100);

                            jPasswordField1.setBorder(error);
                            errorP.setText("! Check the User Name");

                        } catch (InterruptedException ex) {
                            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                };
                t1.start();
            } else if (pass.equals("")) {

                errorP.setText("");
                jPasswordField1.setBorder(def);

                Thread t1 = new Thread() {
                    @Override
                    public void run() {

                        try {
                            sleep(100);
                            jPasswordField1.setBorder(error);
                            errorP.setText("! Enter your Password");

                        } catch (InterruptedException ex) {
                            Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    }
                };
                t1.start();

            } else {

                switch (status) {
                    case "login":

                        try {
                            Class.forName("java.sql.Driver");
                            Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                            Statement stmt = con.createStatement();

                            String query = "Select password from admins where name = '" + name + "';";

                            ResultSet rs = stmt.executeQuery(query);

                            while (rs.next()) {
                                String a = rs.getString("password");
                                password = a;
                            }

                            rs.close();
                            stmt.close();
                            con.close();
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e.getMessage());
                        }

                        if (pass.equals(password)) {

                            errorP.setText("");
                            jPasswordField1.setBorder(def);

                            Thread t1 = new Thread() {
                                @Override
                                public void run() {
                                    try {
                                        sleep(100);
                                        errorP.setText("");
                                        jPasswordField1.setBorder(grant);

                                    } catch (InterruptedException ex) {
                                        Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                }
                            };
                            t1.start();

                            access = "Granted";
                            JOptionPane.showMessageDialog(null, "Access Granted", "ACCESS INFO", JOptionPane.WIDTH);
                            Main main = new Main();
                            main.setVisible(true);
                            this.dispose();
                            JOptionPane.showMessageDialog(null, "Welcome " + name.toUpperCase(), "Welcome", JOptionPane.WIDTH);
                        } else {
                            errorP.setText("");
                            jPasswordField1.setBorder(def);

                            Thread t1 = new Thread() {
                                @Override
                                public void run() {
                                    try {
                                        sleep(100);
                                        errorP.setText("! Wrong Password");
                                        jPasswordField1.setBorder(error);

                                    } catch (InterruptedException ex) {
                                        Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                                    }

                                }
                            };
                            t1.start();

                            fails += 1;
                            access = "Denied";

                            switch (fails) {
                                case 3:
                                    JOptionPane.showMessageDialog(null, "FINAL ATTEMPT! \nPlease Check your Info and try again", "ALERT", JOptionPane.WIDTH);
                                    break;

                                case 4:
                                    JOptionPane.showMessageDialog(null, "YOU HAVE BEEN CAUGHT", "ACCESS DENIED", JOptionPane.WIDTH);
                                    System.exit(0);
                                    break;
                            }
                        }

                        break;

                    case "register":

                        if (pass.length() < 8) {
                            errorP.setText("");
                            jPasswordField1.setBorder(def);

                            Thread t1 = new Thread() {
                                @Override
                                public void run() {
                                    try {
                                        sleep(100);

                                        errorP.setText("! Password less than 8 characters");
                                        jPasswordField1.setBorder(error);

                                    } catch (InterruptedException ex) {
                                        Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                                    }
                                }
                            };
                            t1.start();
                        } else {

                            errorP.setText("");
                            jPasswordField1.setBorder(grant);

                            System.out.print("'" + code + "'");

                            String Reg = JOptionPane.showInputDialog(this, "Please Enter the Secret Code to Register", "Secret Code", WIDTH);

                            if (Reg.equals(code)) {

                                errorP.setText("");
                                jPasswordField1.setBorder(grant);
                                access = "Registered";

                                try {
                                    Class.forName("java.sql.Driver");
                                    Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                                    Statement stmt = con.createStatement();

                                    String query = "insert into admins values ('" + name + "', '" + pass + "');";

                                    stmt.executeUpdate(query);

                                    stmt.close();
                                    con.close();
                                } catch (Exception e) {
                                    JOptionPane.showMessageDialog(this, e.getMessage());
                                }

                                new Main().setVisible(true);
                                JOptionPane.showMessageDialog(null, "Welcome " + name.toUpperCase(), "Welcome", JOptionPane.WIDTH);
                                this.dispose();

                            } else if (Reg == null) {
                                JOptionPane.showMessageDialog(this, "Please Enter Secret Code to Register");
                            } else {
                                JOptionPane.showMessageDialog(this, "Wrong Secret Code");
                                access = "Wrong Secret Code";
                            }
                        }
                        break;
                }

                try {
                    Class.forName("java.sql.Driver");
                    Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                    Statement stmt = con.createStatement();

                    String query = "insert into login_info values('" + name + "', datetime(), '" + access + "');";

                    stmt.executeUpdate(query);

                    stmt.close();
                    con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, e.getMessage());
                }

            }
        }
    }//GEN-LAST:event_jPasswordField1KeyPressed

    private void jPasswordField1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPasswordField1MouseClicked
        // TODO add your handling code here:
        name = jTextField1.getText().trim();

        errorU.setText("");
        jTextField1.setBorder(def);
        jPasswordField1.setBorder(def);
        errorP.setText("");
        jPasswordField1.setText("");

        Thread t = new Thread() {

            @Override
            public void run() {

                try {
                    sleep(100);

                    if (name.equals("")) {
                        errorU.setText("! Enter your User Name");
                        jTextField1.setBorder(error);
                    } else if (name.length() < 5) {
                        errorU.setText("! User Name too short");
                        jTextField1.setBorder(error);
                    } else {

                        try {
                            Class.forName("java.sql.Driver");
                            Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                            Statement stmt = con.createStatement();

                            String query = "select *from admins where name = '" + name + "';";

                            ResultSet rs = stmt.executeQuery(query);

                            if (rs.next() == true) {
                                jPasswordField1.requestFocus();
                                errorU.setText("");
                                jTextField1.setBorder(grant);
                                status = "login";
                            } else {
                                int confirm = JOptionPane.showConfirmDialog(null, "User Name does not Exist \nDo you want to Register as "
                                        + name + "?", "Login Info", JOptionPane.YES_OPTION, WIDTH);

                                switch (confirm) {
                                    case 0:
                                        status = "register";
                                        jPasswordField1.requestFocus();
                                        errorU.setText("");
                                        jTextField1.setBorder(grant);
                                        break;

                                    case 1:
                                        status = "login";
                                        errorU.setText("! Wrong User Name");
                                        jTextField1.setBorder(error);

                                }
                            }

                            rs.close();
                            stmt.close();
                            con.close();
                        } catch (Exception e) {
                            JOptionPane.showMessageDialog(null, e.getMessage());
                        }
                    }

                } catch (InterruptedException ex) {
                    Logger.getLogger(Login.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        };
        t.start();
    }//GEN-LAST:event_jPasswordField1MouseClicked

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:

        try {
            Class.forName("java.sql.Driver");
            Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
            Statement stmt = con.createStatement();

            String query = "SELECT * FROM sqlite_master WHERE type='table'";

            ResultSet rs = stmt.executeQuery(query);
            if (rs.next() == true) {
                if (code.equals("")) {
                    try {
                        query = "select *from SecretCode;";

                        rs = stmt.executeQuery(query);
                        if (rs.next() == true) {
                            code = rs.getString(1);
                        } else {
                            JOptionPane.showMessageDialog(this, "Secret Code Does not Exist");
                            String a = "Splash1";
                            Secret_Code_M sec = new Secret_Code_M(a);
                            sec.setVisible(true);
                            this.dispose();
                            JOptionPane.showMessageDialog(sec, "Please add a Secret Code now");
                        }

                    } catch (Exception e) {

                    }
                }
            } else {
                new Splash1().setVisible(true);
                this.dispose();
            }

            rs.close();
            stmt.close();
            con.close();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }


    }//GEN-LAST:event_formWindowGainedFocus

    private void jPasswordField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_jPasswordField1KeyReleased

    private void jTextField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyTyped
        // TODO add your handling code here:
        /*jTextField1.setBorder(def);
        errorU.setText("");
        jPasswordField1.setBorder(def);
        errorP.setText("");
        System.out.print(evt.getKeyCode());*/
    }//GEN-LAST:event_jTextField1KeyTyped

    private void jPasswordField1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jPasswordField1KeyTyped
        // TODO add your handling code here:
        /*if (evt.getKeyCode() != KeyEvent.VK_ENTER) {
            jPasswordField1.setBorder(def);
            errorP.setText("");
            System.out.print("QWE");
        }*/
    }//GEN-LAST:event_jPasswordField1KeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel errorP;
    private javax.swing.JLabel errorU;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
