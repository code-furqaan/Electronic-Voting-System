/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package voting;

import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.File;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Luqmaan
 */
public class Cand_Blank extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public Cand_Blank() {
        initComponents();
        jLabel1.setIcon(Voting.small);
    }

    public Cand_Blank(String check) {
        initComponents();
        jLabel1.setIcon(Voting.small);

        back = check;
    }

    String back = "";

    ArrayList listName = new ArrayList();
    ArrayList listImg = new ArrayList();

    int times = 0;

    File file = new File("").getAbsoluteFile();
    File database = new File(file + "\\Database");
    File databaseFile = new File(database + "\\furqaan.db");

    public File browse() {
        JFileChooser browse = new JFileChooser();
        browse.setFileSelectionMode(JFileChooser.FILES_ONLY);
        browse.setDialogTitle("Choose Image");
        int check = browse.showDialog(null, "Select Image");

        if (check == JFileChooser.APPROVE_OPTION) {
            File path = browse.getSelectedFile();

            return path;
        }
        return null;
    }

    public String name(File file) {
        String name = file.getName().toUpperCase();
        int pos = name.lastIndexOf(".");

        if (pos == -1) {
            return name;
        } else {
            name = name.substring(0, pos);
            return name;

        }
    }

    public ImageIcon image(File file) {
        Image img = new ImageIcon(file.toString()).getImage().getScaledInstance(240, 240, Image.SCALE_SMOOTH);
        ImageIcon icon = new ImageIcon(img);

        return icon;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        pic3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        pic1 = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        pic2 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        pic4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton8 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        Cand2 = new javax.swing.JTextField();
        Cand3 = new javax.swing.JTextField();
        Cand4 = new javax.swing.JTextField();
        Cand1 = new javax.swing.JTextField();
        jButton9 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jButton16 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(null);

        jPanel4.setBackground(new java.awt.Color(51, 51, 51));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 3));
        jPanel4.setMinimumSize(new java.awt.Dimension(280, 280));
        jPanel4.setPreferredSize(new java.awt.Dimension(250, 250));
        jPanel4.setRequestFocusEnabled(false);
        jPanel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel4MouseClicked(evt);
            }
        });
        jPanel4.setLayout(null);

        pic3.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 14)); // NOI18N
        pic3.setForeground(new java.awt.Color(204, 204, 204));
        pic3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pic3.setText("ADD IMAGE");
        jPanel4.add(pic3);
        pic3.setBounds(10, 10, 230, 230);

        jPanel1.add(jPanel4);
        jPanel4.setBounds(10, 350, 250, 250);

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 3));
        jPanel2.setMinimumSize(new java.awt.Dimension(280, 280));
        jPanel2.setPreferredSize(new java.awt.Dimension(250, 250));
        jPanel2.setRequestFocusEnabled(false);
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });
        jPanel2.setLayout(null);

        pic1.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 14)); // NOI18N
        pic1.setForeground(new java.awt.Color(204, 204, 204));
        pic1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pic1.setText("ADD IMAGE");
        jPanel2.add(pic1);
        pic1.setBounds(10, 10, 230, 230);

        jPanel1.add(jPanel2);
        jPanel2.setBounds(10, 10, 250, 250);

        jPanel5.setBackground(new java.awt.Color(51, 51, 51));
        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 3));
        jPanel5.setMinimumSize(new java.awt.Dimension(280, 280));
        jPanel5.setPreferredSize(new java.awt.Dimension(250, 250));
        jPanel5.setRequestFocusEnabled(false);
        jPanel5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel5MouseClicked(evt);
            }
        });
        jPanel5.setLayout(null);

        pic2.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 14)); // NOI18N
        pic2.setForeground(new java.awt.Color(204, 204, 204));
        pic2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pic2.setText("ADD IMAGE");
        jPanel5.add(pic2);
        pic2.setBounds(10, 10, 230, 230);

        jPanel1.add(jPanel5);
        jPanel5.setBounds(890, 10, 250, 250);

        jPanel3.setBackground(new java.awt.Color(51, 51, 51));
        jPanel3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 102), 3));
        jPanel3.setMinimumSize(new java.awt.Dimension(280, 280));
        jPanel3.setPreferredSize(new java.awt.Dimension(250, 250));
        jPanel3.setRequestFocusEnabled(false);
        jPanel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel3MouseClicked(evt);
            }
        });
        jPanel3.setLayout(null);

        pic4.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 14)); // NOI18N
        pic4.setForeground(new java.awt.Color(204, 204, 204));
        pic4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        pic4.setText("ADD IMAGE");
        jPanel3.add(pic4);
        pic4.setBounds(10, 10, 230, 230);

        jPanel1.add(jPanel3);
        jPanel3.setBounds(890, 350, 250, 250);

        jLabel7.setFont(new java.awt.Font("Berlin Sans FB", 1, 14)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 102, 102));
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText(" + Furqaan Developments +");
        jPanel1.add(jLabel7);
        jLabel7.setBounds(440, 640, 310, 30);

        jButton8.setBackground(new java.awt.Color(51, 51, 51));
        jButton8.setFont(new java.awt.Font("Berlin Sans FB", 1, 16)); // NOI18N
        jButton8.setForeground(new java.awt.Color(255, 255, 255));
        jButton8.setText("CLEAR ALL");
        jButton8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton8);
        jButton8.setBounds(520, 470, 150, 40);

        jButton7.setBackground(new java.awt.Color(51, 51, 51));
        jButton7.setFont(new java.awt.Font("Berlin Sans FB", 1, 16)); // NOI18N
        jButton7.setForeground(new java.awt.Color(255, 255, 255));
        jButton7.setText("BACK TO MENU");
        jButton7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton7);
        jButton7.setBounds(520, 520, 150, 40);

        jLabel6.setFont(new java.awt.Font("Berlin Sans FB", 1, 48)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("ADD CANDIDATES");
        jPanel1.add(jLabel6);
        jLabel6.setBounds(360, 230, 460, 80);

        jLabel5.setFont(new java.awt.Font("Berlin Sans FB", 1, 48)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(51, 51, 51));
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel5.setText("HEAD BOY");
        jPanel1.add(jLabel5);
        jLabel5.setBounds(300, 310, 580, 80);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(jLabel1);
        jLabel1.setBounds(390, 0, 400, 230);

        Cand2.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        Cand2.setForeground(new java.awt.Color(51, 51, 51));
        Cand2.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Cand2.setText("HEAD BOY 2");
        Cand2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 2));
        Cand2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Cand2MouseClicked(evt);
            }
        });
        Cand2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Cand2KeyReleased(evt);
            }
        });
        jPanel1.add(Cand2);
        Cand2.setBounds(890, 260, 250, 30);

        Cand3.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        Cand3.setForeground(new java.awt.Color(51, 51, 51));
        Cand3.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Cand3.setText("HEAD BOY 3");
        Cand3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 2));
        Cand3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Cand3MouseClicked(evt);
            }
        });
        Cand3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Cand3KeyReleased(evt);
            }
        });
        jPanel1.add(Cand3);
        Cand3.setBounds(10, 600, 250, 30);

        Cand4.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        Cand4.setForeground(new java.awt.Color(51, 51, 51));
        Cand4.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Cand4.setText("HEAD BOY 4");
        Cand4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 2));
        Cand4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Cand4MouseClicked(evt);
            }
        });
        Cand4.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Cand4KeyReleased(evt);
            }
        });
        jPanel1.add(Cand4);
        Cand4.setBounds(890, 600, 250, 30);

        Cand1.setFont(new java.awt.Font("Berlin Sans FB Demi", 1, 18)); // NOI18N
        Cand1.setForeground(new java.awt.Color(51, 51, 51));
        Cand1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        Cand1.setText("HEAD BOY 1");
        Cand1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(51, 51, 51), 2));
        Cand1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                Cand1FocusLost(evt);
            }
        });
        Cand1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Cand1MouseClicked(evt);
            }
        });
        Cand1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Cand1KeyReleased(evt);
            }
        });
        jPanel1.add(Cand1);
        Cand1.setBounds(10, 260, 250, 30);

        jButton9.setBackground(new java.awt.Color(255, 255, 255));
        jButton9.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 14)); // NOI18N
        jButton9.setText("CLEAR");
        jButton9.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton9);
        jButton9.setBounds(190, 300, 70, 30);

        jButton10.setBackground(new java.awt.Color(255, 255, 255));
        jButton10.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 14)); // NOI18N
        jButton10.setText("ADD");
        jButton10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton10);
        jButton10.setBounds(10, 300, 70, 30);

        jButton11.setBackground(new java.awt.Color(255, 255, 255));
        jButton11.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 14)); // NOI18N
        jButton11.setText("ADD");
        jButton11.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton11);
        jButton11.setBounds(10, 640, 70, 30);

        jButton12.setBackground(new java.awt.Color(255, 255, 255));
        jButton12.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 14)); // NOI18N
        jButton12.setText("CLEAR");
        jButton12.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton12);
        jButton12.setBounds(190, 640, 70, 30);

        jButton13.setBackground(new java.awt.Color(255, 255, 255));
        jButton13.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 14)); // NOI18N
        jButton13.setText("ADD");
        jButton13.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton13);
        jButton13.setBounds(890, 300, 70, 30);

        jButton14.setBackground(new java.awt.Color(255, 255, 255));
        jButton14.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 14)); // NOI18N
        jButton14.setText("CLEAR");
        jButton14.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton14);
        jButton14.setBounds(1070, 300, 70, 30);

        jButton15.setBackground(new java.awt.Color(255, 255, 255));
        jButton15.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 14)); // NOI18N
        jButton15.setText("ADD");
        jButton15.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton15);
        jButton15.setBounds(890, 640, 70, 30);

        jButton16.setBackground(new java.awt.Color(255, 255, 255));
        jButton16.setFont(new java.awt.Font("Berlin Sans FB Demi", 0, 14)); // NOI18N
        jButton16.setText("CLEAR");
        jButton16.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton16);
        jButton16.setBounds(1070, 640, 70, 30);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(1216, 714));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        while (times == 0) {
            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                Statement stmt = con.createStatement();

                /*String query = "Select *from headboy order by pos;";

                ResultSet rs = stmt.executeQuery(query);

                while (rs.next()) {
                    String name = rs.getString(1);
                    String img = rs.getString(3);
                    //String pos = rs.getString(4);

                    listName.add(name);
                    listImg.add(img);

                }
                
                switch (listImg.size()) {
                    case 4:
                        pic1.setIcon(image(new File(listImg.get(0).toString())));
                        pic2.setIcon(image(new File(listImg.get(1).toString())));
                        pic3.setIcon(image(new File(listImg.get(2).toString())));
                        pic4.setIcon(image(new File(listImg.get(3).toString())));
                        break;
                    case 3:
                        pic1.setIcon(image(new File(listImg.get(0).toString())));
                        pic2.setIcon(image(new File(listImg.get(1).toString())));
                        pic3.setIcon(image(new File(listImg.get(2).toString())));
                        break;
                    case 2:
                        pic1.setIcon(image(new File(listImg.get(0).toString())));
                        pic2.setIcon(image(new File(listImg.get(1).toString())));

                        break;
                    case 1:
                        pic1.setIcon(image(new File(listImg.get(0).toString())));
                        break;
                    default:
                        break;
                }

                switch (listName.size()) {
                    case 4:
                        Cand1.setText(listName.get(0).toString());
                        Cand2.setText(listName.get(1).toString());
                        Cand3.setText(listName.get(2).toString());
                        Cand4.setText(listName.get(3).toString());
                        break;
                    case 3:
                        Cand1.setText(listName.get(0).toString());
                        Cand2.setText(listName.get(1).toString());
                        Cand3.setText(listName.get(2).toString());
                        break;
                    case 2:
                        Cand1.setText(listName.get(0).toString());
                        Cand2.setText(listName.get(1).toString());
                        break;
                    case 1:
                        Cand1.setText(listName.get(0).toString());
                        break;
                }*/
                String query = "Select *from headboy where pos = 1;";

                ResultSet rs = stmt.executeQuery(query);

                if (rs.next() == true) {

                    if (rs.getString(3) != null) {
                        pic1.setIcon(image(new File(rs.getString(3))));
                    }

                    if (rs.getString(1) != null) {
                        Cand1.setText(rs.getString(1));
                    }
                }

                rs.close();
                stmt.close();
                con.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }

            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                Statement stmt = con.createStatement();
                ResultSet rs;
                String query;

                query = "Select *from headboy where pos = 2;";

                rs = stmt.executeQuery(query);

                if (rs.next()) {
                    if (rs.getString(3) != null) {
                        pic2.setIcon(image(new File(rs.getString(3))));
                    }

                    if (rs.getString(1) != null) {
                        Cand2.setText(rs.getString(1));
                    }
                }
                rs.close();
                stmt.close();
                con.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }

            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                Statement stmt = con.createStatement();
                String query;
                ResultSet rs;

                query = "Select *from headboy where pos = 3;";

                rs = stmt.executeQuery(query);

                if (rs.next()) {
                    if (rs.getString(3) != null) {
                        pic3.setIcon(image(new File(rs.getString(3))));
                    }

                    if (rs.getString(1) != null) {
                        Cand3.setText(rs.getString(1));
                    }
                }
                rs.close();
                stmt.close();
                con.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }

            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                Statement stmt = con.createStatement();
                String query;
                ResultSet rs;

                query = "Select *from headboy where pos = 4;";

                rs = stmt.executeQuery(query);

                if (rs.next()) {
                    if (rs.getString(3) != null) {
                        pic4.setIcon(image(new File(rs.getString(3))));
                    }

                    if (rs.getString(1) != null) {
                        Cand4.setText(rs.getString(1));
                    }
                }
                rs.close();
                stmt.close();
                con.close();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
            times++;
        }
    }//GEN-LAST:event_formWindowGainedFocus

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:

        Add_Cand main = new Add_Cand(back);
        main.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        // TODO add your handling code here:
        int pos = 1;

        int confirm = JOptionPane.showConfirmDialog(this, "Do you want to Add or Change Image?", "Confirm", JOptionPane.YES_NO_OPTION, WIDTH);

        if (confirm == JOptionPane.YES_OPTION) {

            File path = browse();

            if (path != null) {
                ImageIcon img = image(path);

                pic1.setIcon(img);
                pic1.setText("");

                /*System.out.println(name);
                String input = JOptionPane.showInputDialog(this, "Enter Candidate's Name").trim();

                if (!input.isEmpty()) {
                    name = input;
                }

                name = name.toUpperCase();

                Cand1.setText(name);*/
                try {
                    Class.forName("java.sql.Driver");
                    Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                    Statement stmt = con.createStatement();
                    ResultSet rs;

                    String query = "Select path from headboy where pos = " + pos + ";";

                    rs = stmt.executeQuery(query);

                    if (rs.next() != true) {
                        query = "insert into headboy (count, path, pos) values (0, '" + path.toString() + "'," + pos + ");";
                        stmt.executeUpdate(query);
                    } else {
                        query = "update headboy set path = '" + path.toString() + "' where pos = " + pos + ";";
                        stmt.executeUpdate(query);
                    }

                    rs.close();
                    stmt.close();
                    con.close();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }
            }
        }
    }//GEN-LAST:event_jPanel2MouseClicked

    private void jPanel5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel5MouseClicked
        // TODO add your handling code here:
        int pos = 2;

        int confirm = JOptionPane.showConfirmDialog(this, "Do you want to Add or Change Image?", "Confirm", JOptionPane.YES_NO_OPTION, WIDTH);

        if (confirm == JOptionPane.YES_OPTION) {

            File path = browse();

            if (path != null) {
                ImageIcon img = image(path);

                pic2.setIcon(img);
                pic2.setText("");

                try {
                    Class.forName("java.sql.Driver");
                    Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                    Statement stmt = con.createStatement();
                    ResultSet rs;

                    String query = "Select path from headboy where pos = " + pos + ";";

                    rs = stmt.executeQuery(query);

                    if (rs.next() != true) {
                        query = "insert into headboy (count, path, pos) values (0, '" + path.toString() + "'," + pos + ");";
                        stmt.executeUpdate(query);
                    } else {
                        query = "update headboy set path = '" + path.toString() + "' where pos = " + pos + ";";
                        stmt.executeUpdate(query);
                    }

                    rs.close();
                    stmt.close();
                    con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }

            }
        }
    }//GEN-LAST:event_jPanel5MouseClicked

    private void jPanel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel4MouseClicked
        // TODO add your handling code here:
        int pos = 3;

        int confirm = JOptionPane.showConfirmDialog(this, "Do you want to Add or Change Image?", "Confirm", JOptionPane.YES_NO_OPTION, WIDTH);

        if (confirm == JOptionPane.YES_OPTION) {

            File path = browse();

            if (path != null) {
                ImageIcon img = image(path);

                pic3.setIcon(img);
                pic3.setText("");

                try {
                    Class.forName("java.sql.Driver");
                    Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                    Statement stmt = con.createStatement();
                    ResultSet rs;

                    String query = "Select path from headboy where pos = " + pos + ";";

                    rs = stmt.executeQuery(query);

                    if (rs.next() != true) {
                        query = "insert into headboy (count, path, pos) values (0, '" + path.toString() + "'," + pos + ");";
                        stmt.executeUpdate(query);
                    } else {
                        query = "update headboy set path = '" + path.toString() + "' where pos = " + pos + ";";
                        stmt.executeUpdate(query);
                    }

                    rs.close();
                    stmt.close();
                    con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }

            }
        }
    }//GEN-LAST:event_jPanel4MouseClicked

    private void jPanel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel3MouseClicked
        // TODO add your handling code here:
        int pos = 4;

        int confirm = JOptionPane.showConfirmDialog(this, "Do you want to Add or Change Image?", "Confirm", JOptionPane.YES_NO_OPTION, WIDTH);

        if (confirm == JOptionPane.YES_OPTION) {

            File path = browse();

            if (path != null) {
                ImageIcon img = image(path);

                pic4.setIcon(img);
                pic4.setText("");

                try {
                    Class.forName("java.sql.Driver");
                    Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                    Statement stmt = con.createStatement();
                    ResultSet rs;

                    String query = "Select path from headboy where pos = " + pos + ";";

                    rs = stmt.executeQuery(query);

                    if (rs.next() != true) {
                        query = "insert into headboy (count, path, pos) values (0, '" + path.toString() + "'," + pos + ");";
                        stmt.executeUpdate(query);
                    } else {
                        query = "update headboy set path = '" + path.toString() + "' where pos = " + pos + ";";
                        stmt.executeUpdate(query);
                    }

                    rs.close();
                    stmt.close();
                    con.close();
                } catch (Exception e) {
                    JOptionPane.showMessageDialog(this, e.getMessage());
                }

            }
        }
    }//GEN-LAST:event_jPanel3MouseClicked

    private void Cand1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Cand1MouseClicked
        // TODO add your handling code here:
        Cand1.selectAll();
    }//GEN-LAST:event_Cand1MouseClicked

    private void Cand1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Cand1KeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int pos = 1;
            String name = Cand1.getText().toUpperCase().trim();

            Cand1.setText(name);

            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                Statement stmt = con.createStatement();
                ResultSet rs;

                String query = "Select name from headboy where pos = " + pos + ";";

                rs = stmt.executeQuery(query);

                System.out.print(name);

                if (rs.next() != true) {
                    query = "insert into headboy (name, count, pos) values ('" + name.toUpperCase() + "', 0, " + pos + ");";

                    stmt.executeUpdate(query);
                } else {
                    query = "update headboy set name = '" + name.toUpperCase() + "' where pos = " + pos + ";";
                    stmt.executeUpdate(query);
                }

                rs.close();
                stmt.close();
                con.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_Cand1KeyReleased

    private void Cand1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Cand1FocusLost
        // TODO add your handling code here:
        /*int pos = 1;
        String name = Cand1.getText().toUpperCase().trim();

        Cand1.setText(name);

        try {
            Class.forName("java.sql.Driver");
            Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
            Statement stmt = con.createStatement();
            ResultSet rs;

            String query = "Select name from headboy where pos = " + pos + ";";

            rs = stmt.executeQuery(query);

            System.out.print(name);

            if (rs.next() != true) {
                System.out.print("QQQ");
                query = "insert into headboy (name, count, pos) values ('" + name.toUpperCase() + "', 0, " + pos + ");";

                stmt.executeUpdate(query);
            } else {
                System.out.print("WWW");
                query = "update headboy set name = '" + name.toUpperCase() + "' where pos = " + pos + ";";
                stmt.executeUpdate(query);
            }

            rs.close();
            stmt.close();
            con.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }*/
    }//GEN-LAST:event_Cand1FocusLost

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        int pos = 1;

        try {
            Class.forName("java.sql.Driver");
            Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
            Statement stmt = con.createStatement();

            String query = "Delete from headboy where pos = " + pos + ";";

            stmt.executeUpdate(query);

            pic1.setIcon(null);
            pic1.setText("ADD IMAGE");
            Cand1.setText("HEAD BOY " + pos);

            stmt.close();
            con.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:
        int pos = 1;
        String name = Cand1.getText().toUpperCase().trim();

        try {
            Class.forName("java.sql.Driver");
            Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
            Statement stmt = con.createStatement();
            ResultSet rs;

            String query = "Select name from headboy where pos = " + pos + ";";

            rs = stmt.executeQuery(query);

            System.out.print(name);

            if (rs.next() != true) {
                System.out.print("QQQ");
                query = "insert into headboy (name, count, pos) values ('" + name.toUpperCase() + "', 0, " + pos + ");";

                stmt.executeUpdate(query);
            } else {
                System.out.print("WWW");
                query = "update headboy set name = '" + name.toUpperCase() + "' where pos = " + pos + ";";
                stmt.executeUpdate(query);
            }

            Cand1.setText(name);

            rs.close();
            stmt.close();
            con.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        int pos = 3;
        String name = Cand3.getText().toUpperCase().trim();

        try {
            Class.forName("java.sql.Driver");
            Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
            Statement stmt = con.createStatement();
            ResultSet rs;

            String query = "Select name from headboy where pos = " + pos + ";";

            rs = stmt.executeQuery(query);

            System.out.print(name);

            if (rs.next() != true) {
                System.out.print("QQQ");
                query = "insert into headboy (name, count, pos) values ('" + name.toUpperCase() + "', 0, " + pos + ");";

                stmt.executeUpdate(query);
            } else {
                System.out.print("WWW");
                query = "update headboy set name = '" + name.toUpperCase() + "' where pos = " + pos + ";";
                stmt.executeUpdate(query);
            }

            Cand3.setText(name);

            rs.close();
            stmt.close();
            con.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_jButton11ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:
        int pos = 3;

        try {
            Class.forName("java.sql.Driver");
            Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
            Statement stmt = con.createStatement();

            String query = "Delete from headboy where pos = " + pos + ";";

            stmt.executeUpdate(query);

            pic3.setIcon(null);
            pic3.setText("ADD IMAGE");
            Cand3.setText("HEAD BOY " + pos);

            stmt.close();
            con.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        int pos = 2;
        String name = Cand2.getText().toUpperCase().trim();

        try {
            Class.forName("java.sql.Driver");
            Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
            Statement stmt = con.createStatement();
            ResultSet rs;

            String query = "Select name from headboy where pos = " + pos + ";";

            rs = stmt.executeQuery(query);

            System.out.print(name);

            if (rs.next() != true) {
                System.out.print("QQQ");
                query = "insert into headboy (name, count, pos) values ('" + name.toUpperCase() + "', 0, " + pos + ");";

                stmt.executeUpdate(query);
            } else {
                System.out.print("WWW");
                query = "update headboy set name = '" + name.toUpperCase() + "' where pos = " + pos + ";";
                stmt.executeUpdate(query);
            }

            Cand2.setText(name);

            rs.close();
            stmt.close();
            con.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        int pos = 2;

        try {
            Class.forName("java.sql.Driver");
            Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
            Statement stmt = con.createStatement();

            String query = "Delete from headboy where pos = " + pos + ";";

            stmt.executeUpdate(query);

            pic2.setIcon(null);
            pic2.setText("ADD IMAGE");
            Cand2.setText("HEAD BOY " + pos);

            stmt.close();
            con.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_jButton14ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:
        int pos = 4;
        String name = Cand4.getText().toUpperCase().trim();

        try {
            Class.forName("java.sql.Driver");
            Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
            Statement stmt = con.createStatement();
            ResultSet rs;

            String query = "Select name from headboy where pos = " + pos + ";";

            rs = stmt.executeQuery(query);

            System.out.print(name);

            if (rs.next() != true) {
                System.out.print("QQQ");
                query = "insert into headboy (name, count, pos) values ('" + name.toUpperCase() + "', 0, " + pos + ");";

                stmt.executeUpdate(query);
            } else {
                System.out.print("WWW");
                query = "update headboy set name = '" + name.toUpperCase() + "' where pos = " + pos + ";";
                stmt.executeUpdate(query);
            }

            Cand4.setText(name);

            rs.close();
            stmt.close();
            con.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:
        int pos = 4;

        try {
            Class.forName("java.sql.Driver");
            Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
            Statement stmt = con.createStatement();

            String query = "Delete from headboy where pos = " + pos + ";";

            stmt.executeUpdate(query);

            pic4.setIcon(null);
            pic4.setText("ADD IMAGE");
            Cand4.setText("HEAD BOY " + pos);

            stmt.close();
            con.close();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage());
        }
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to Remove all Candidates?", "Confirm", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            int pos = 1;

            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                Statement stmt = con.createStatement();

                String query = "Delete from headboy where pos = " + pos + ";";

                stmt.executeUpdate(query);

                pic1.setIcon(null);
                pic1.setText("ADD IMAGE");
                Cand1.setText("HEAD BOY " + pos);

                stmt.close();
                con.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }

            pos = 2;

            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                Statement stmt = con.createStatement();

                String query = "Delete from headboy where pos = " + pos + ";";

                stmt.executeUpdate(query);

                pic2.setIcon(null);
                pic2.setText("ADD IMAGE");
                Cand2.setText("HEAD BOY " + pos);

                stmt.close();
                con.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }

            pos = 3;

            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                Statement stmt = con.createStatement();

                String query = "Delete from headboy where pos = " + pos + ";";

                stmt.executeUpdate(query);

                pic3.setIcon(null);
                pic3.setText("ADD IMAGE");
                Cand3.setText("HEAD BOY " + pos);

                stmt.close();
                con.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }

            pos = 4;

            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                Statement stmt = con.createStatement();

                String query = "Delete from headboy where pos = " + pos + ";";

                stmt.executeUpdate(query);

                pic4.setIcon(null);
                pic4.setText("ADD IMAGE");
                Cand4.setText("HEAD BOY " + pos);

                stmt.close();
                con.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }

            JOptionPane.showMessageDialog(this, "All Candidates have been Cleared");
        }


    }//GEN-LAST:event_jButton8ActionPerformed

    private void Cand2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Cand2MouseClicked
        // TODO add your handling code here:
        Cand2.selectAll();
    }//GEN-LAST:event_Cand2MouseClicked

    private void Cand4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Cand4MouseClicked
        // TODO add your handling code here:
        Cand4.selectAll();
    }//GEN-LAST:event_Cand4MouseClicked

    private void Cand3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Cand3MouseClicked
        // TODO add your handling code here:
        Cand3.selectAll();
    }//GEN-LAST:event_Cand3MouseClicked

    private void Cand2KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Cand2KeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int pos = 2;
            String name = Cand2.getText().toUpperCase().trim();

            Cand2.setText(name);

            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                Statement stmt = con.createStatement();
                ResultSet rs;

                String query = "Select name from headboy where pos = " + pos + ";";

                rs = stmt.executeQuery(query);

                System.out.print(name);

                if (rs.next() != true) {
                    query = "insert into headboy (name, count, pos) values ('" + name.toUpperCase() + "', 0, " + pos + ");";

                    stmt.executeUpdate(query);
                } else {
                    query = "update headboy set name = '" + name.toUpperCase() + "' where pos = " + pos + ";";
                    stmt.executeUpdate(query);
                }

                rs.close();
                stmt.close();
                con.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_Cand2KeyReleased

    private void Cand3KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Cand3KeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int pos = 3;
            String name = Cand3.getText().toUpperCase().trim();

            Cand3.setText(name);

            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                Statement stmt = con.createStatement();
                ResultSet rs;

                String query = "Select name from headboy where pos = " + pos + ";";

                rs = stmt.executeQuery(query);

                System.out.print(name);

                if (rs.next() != true) {
                    query = "insert into headboy (name, count, pos) values ('" + name.toUpperCase() + "', 0, " + pos + ");";

                    stmt.executeUpdate(query);
                } else {
                    query = "update headboy set name = '" + name.toUpperCase() + "' where pos = " + pos + ";";
                    stmt.executeUpdate(query);
                }

                rs.close();
                stmt.close();
                con.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_Cand3KeyReleased

    private void Cand4KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Cand4KeyReleased
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            int pos = 4;
            String name = Cand4.getText().toUpperCase().trim();

            Cand4.setText(name);

            try {
                Class.forName("java.sql.Driver");
                Connection con = DriverManager.getConnection("jdbc:sqlite:" + databaseFile);
                Statement stmt = con.createStatement();
                ResultSet rs;

                String query = "Select name from headboy where pos = " + pos + ";";

                rs = stmt.executeQuery(query);

                System.out.print(name);

                if (rs.next() != true) {
                    query = "insert into headboy (name, count, pos) values ('" + name.toUpperCase() + "', 0, " + pos + ");";

                    stmt.executeUpdate(query);
                } else {
                    query = "update headboy set name = '" + name.toUpperCase() + "' where pos = " + pos + ";";
                    stmt.executeUpdate(query);
                }

                rs.close();
                stmt.close();
                con.close();

            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, e.getMessage());
            }
        }
    }//GEN-LAST:event_Cand4KeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cand_Blank.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                Cand_Blank head = new Cand_Blank();
                head.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Cand1;
    private javax.swing.JTextField Cand2;
    private javax.swing.JTextField Cand3;
    private javax.swing.JTextField Cand4;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel pic1;
    private javax.swing.JLabel pic2;
    private javax.swing.JLabel pic3;
    private javax.swing.JLabel pic4;
    // End of variables declaration//GEN-END:variables
}
